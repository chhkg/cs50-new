# Generated by Django 4.1.7 on 2023-03-31 12:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asset",
                    models.CharField(
                        choices=[
                            ("Stock", "Stock"),
                            ("FiatMoney", "Fiat Money"),
                            ("Crypto", "Crypto"),
                        ],
                        max_length=9,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("USD", "USD"),
                            ("HKD", "HKD"),
                            ("EUR", "EUR"),
                            ("CAD", "CAD"),
                            ("CHF", "CHF"),
                            ("CNY", "CNY"),
                            ("GBP", "GBP"),
                            ("JPY", "JPY"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Buy", "Buy"),
                            ("Sell", "Sell"),
                            ("Dividend", "Dividend"),
                            ("Interest", "Interest"),
                            ("Deduction", "Deduction"),
                            ("Deposit", "Deposit"),
                            ("Withdrawal", "Withdrawal"),
                        ],
                        max_length=10,
                    ),
                ),
                ("symbol", models.CharField(max_length=50)),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=30,
                        default=None,
                        max_digits=60,
                        null=True,
                    ),
                ),
                (
                    "proceed",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                ("basis", models.DecimalField(decimal_places=30, max_digits=60)),
                (
                    "plpercent",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                (
                    "pl",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                ("remark", models.TextField(blank=True, max_length=500)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("lastupdate", models.DateTimeField(auto_now=True)),
                (
                    "relatedbuytransaction",
                    models.ManyToManyField(
                        blank=True, to="stockcalculator.transaction"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transaction_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockHolding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("buydate", models.DateField()),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("USD", "USD"),
                            ("HKD", "HKD"),
                            ("EUR", "EUR"),
                            ("CAD", "CAD"),
                            ("CHF", "CHF"),
                            ("CNY", "CNY"),
                            ("GBP", "GBP"),
                            ("JPY", "JPY"),
                        ],
                        max_length=3,
                    ),
                ),
                ("symbol", models.CharField(max_length=50)),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=30, max_digits=60, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("lastupdate", models.DateTimeField(auto_now=True)),
                (
                    "buytransaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stockholding_buytransaction",
                        to="stockcalculator.transaction",
                    ),
                ),
                (
                    "selltransaction",
                    models.ManyToManyField(
                        blank=True,
                        related_name="stockholding_selltransaction",
                        to="stockcalculator.transaction",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stockholding_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FiatHolding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "currency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("USD", "USD"),
                            ("HKD", "HKD"),
                            ("EUR", "EUR"),
                            ("CAD", "CAD"),
                            ("CHF", "CHF"),
                            ("CNY", "CNY"),
                            ("GBP", "GBP"),
                            ("JPY", "JPY"),
                        ],
                        max_length=3,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=30, max_digits=60)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("lastupdate", models.DateTimeField(auto_now=True)),
                (
                    "relatedtransaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fiatholding_relatedtransaction",
                        to="stockcalculator.transaction",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fiatholding_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CryptoHolding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("currency", models.CharField(max_length=10)),
                ("amount", models.DecimalField(decimal_places=30, max_digits=60)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("lastupdate", models.DateTimeField(auto_now=True)),
                (
                    "relatedtransaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cryptoholding_relatedtransaction",
                        to="stockcalculator.transaction",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cryptoholding_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
